<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.studentMapper">
	<!-- namespace : sql문이 포함될 이름 공간, sql문을 구분하기 위해 사용 -->
	<!-- sql 작성 -->							<!-- configuration.xml에서 모델.스튜던트 클래스의 id값을 student로 해놨기 때문에 이렇게 함. -->
	<insert id="insertStudent" parameterType="student">
		INSERT INTO student
		VALUES (#{snum},#{sname},#{sgrade})
	</insert>
	<update id="updateStudent" parameterType="student" >
		UPDATE student
		 SET sname = #{sname}, <!-- #{} == getter의 이름 setter의 이름은 어떻게 하는지 몰렁.. 필요도 없자너 -->
			sgrade = #{sgrade}
		WHERE snum = #{snum}
	</update>					<!-- 번호로 지우는 거니까 인트 -->
	<delete id="deleteStudent" parameterType="int">
		DELETE student
		 WHERE snum = #{snum}
	</delete>								<!-- 반환형 타입 -->
	<select id="selectOne"  parameterType="int" resultType="student">
		SELECT *
		  FROM student
		 WHERE snum = #{snum}
	<!-- 파라미터가 하나인 경우에는 이름과 상관없이 일단 들어감. int한테는 snum이 없지만 들어간다는거! -->	 
	</select>
	<select id="selectAll" resultType="student">
		SELECT * FROM student
	</select>
	
	<!-- 
		jdbcTemplate에서는 rowMapper 
		mybatis에서는 resultMap 사용
		칼럼명과 모델 클래스의 프로퍼티 이름이 다를 때, 결과 매핑을 위해서 사용한다.
	-->
			<!-- type = 반환할 타입,모델(알리아스 ㄱ) / id = 맵의 이름 -->
	<resultMap type="student" id="studentMap">
		<result property="snum" column="snum"/>
		<result property="sname" column="sname"/>
		<result property="sgrade" column="sgrade"/>
	</resultMap>
</mapper>