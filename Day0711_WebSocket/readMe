웹소켓(WebSocket)은 하나의 TCP 접속에 전이중 통신 채널을 제공하는 컴퓨터 통신 프로토콜이다.
웹소켓 프로토콜은 2011년 IETF에 의해 RFC 6455로 표준화되었으며 웹 IDL의 웹소켓 API는 W3C에 의해 표준화되고 있다.
HTML5

WebSockets은 웹 페이지를 동적이고 상호 작용적으로 만들 수 있다.
예를 들어 뉴스, 메일 및 소셜 피드 등은 동적 업데이트가 필요하지만 몇분 단위정도면 충분하다.
하지만 협업, 게임 및 금융 애플리케이션은 실시간에 훨씬 더 가까워야한다.

MVN repository에서 Spring WebSocket 검색 후 디펜던시 가져옴.

순서
클라이언트와 서버가 존재
1. 클라이언트가 서버에 연결 요청 (웹소켓이 엔드포인트 쪽으로 연결을 요청함)
2. 서버가 연결을 수락하여 상호간 데이터 전달이 가능한 통로를 만들어줌
3. 통-신

개요
	client				server
------------             -------------
-Websocket 0<----------->0 endpoint  -
-          -             -           -
-          -             -           -
-          -             -           -
------------             ------------- * 0 = 스트림

설명
1. WebSocket Handler 등록 
	연결 요청을 받아서 처리하고, 메시지를 받아서 전달하는 역할을 한다.
2. dispatcher servlet이 요청을 받아서 컨트롤러에 전달한다.
	요청이 웹소켓으로 들어오는 메시지 이거나 연결이면 Handler가 중간에서 요청을 가로채서 처리한다.

-----------------------------------------------------------

Stomp.js를 이용해서 메시지 처리하기
	Stomp.js란?
		컨트롤러 쪽에서 웹소켓 메시지 전달을 받을 수 있게 처리한다.
		클라이언트로 메시지를 전달할 때도 효율적으로 url로 구분하여 메시지 전송
		

	