Controller 반환값 정리
Controller의 반환형은 크게 ModelAndView, String, void로 나뉨.

ModelAndView : 화면 정보, 데이터 둘 다 가지고 있을 때 사용 
ex) @RequestMapping("/hello.do")
	public ModelAndView foo() {
		ModelAndView mav = new ModelAndView();
		mav.addObject("msg", "Hello!! world!!");
		mav.setViewName("hello.jsp");
		return mav;
	}
String : 화면 정보만 필요할 때 (반환값에 해당하는 문자열을 view Name으로 간주)
		메서드의 파라미터에 Model을 선언하면 문자열을 반환하면서 데이터도 화면으로 넘긴다.
void : 둘 다 필요없을 때 (요청에서 .do를 제외한 요청이름을 view Name으로 간주)

Controller에서 요청 파라미터 얻어오기
@RequestMapping("/test")
public String test(int grade) {}
예) /test?gard=1
요청 파라미터의 이름과 메서드 파라미터의 이름을 맞춰주면 된다.
spring에서는 데이터 타입에 맞춰 자동으로 변환해준다.

만약 요청 파라미터 이름과 컨트롤러 메서드의 파라미터 이름이 다를 경우
@RequestParam(value = "grade") int g로 매칭시켜 줄 수 있다.
그리고 @RequestParam(value = "grade", defaultValue="1") int g를 통해 1을 파라미터의 기본값으로 줄 수도 있다.

addStudent.jsp에서 학생정보를 입력받아서 DB에 저장하는 요청을 처리하자.
해야할 것:
1. addStudent.jsp 작성
2. /student/addStudent 요청을 처리하는 handler 작성(컨트롤러 메서드)
3. dao, mapper, service 수정

//insert 후에 자동 생성된 번호가져오기 
MyBatis 기능을 활용하면 됩니다!!

<selectKey keyProperty="num" order="BEFORE" resultType="int">
			select student_seq.nextval from dual
</selectKey>
를 이용하면 파라미터로 넘어온 객체에 비어있는 key속성을 채워 넣어준다. 